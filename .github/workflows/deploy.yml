name: Deploy to Heroku

on:
  push:
    branches:
      - main
  workflow_dispatch:  # 手動トリガーを追加

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18.12.1'

    - name: Check Node.js version
      run: node -v

    - name: Cache Node.js modules for frontend
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/frontend/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Show frontend package.json
      working-directory: ./frontend
      run: cat package.json

    - name: List frontend scripts
      working-directory: ./frontend
      run: npm run

    - name: Build frontend
      working-directory: ./frontend
      run: npm run build

    - name: Cache Node.js modules for backend
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/backend/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install backend dependencies
      working-directory: ./backend
      run: npm ci

    - name: Show backend package.json
      working-directory: ./backend
      run: cat package.json

    - name: List backend scripts
      working-directory: ./backend
      run: npm run

    - name: Install Heroku CLI
      run: curl https://cli-assets.heroku.com/install.sh | sh

    - name: Authenticate with Heroku
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: echo $HEROKU_API_KEY | heroku auth:token

    - name: Deploy to Heroku
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
      run: |
        heroku git:remote -a $HEROKU_APP_NAME
        git push heroku main